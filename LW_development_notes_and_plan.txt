Plan and notes for adding LW+MHs to pyC2Ray code

This is in 'LW_background_and_MHs' branch on GitHub


1) Add LW-related subroutines (getjLW, jLWgreen, get_rLW) to the c2ray
Fortran libraries and modify Makefile accordingly.

2) Link FFTW to code (when needed, i.e. when LW+MHs are used), see

https://pyfftw.readthedocs.io/en/latest/source/tutorial.html

for usage of Python wrapper to FFTW (also discussion on Slack)

Q: Is this properly parallelized with OpenMP and/or MPI?

3) Clean up, check and add the 'C2Ray_CubeP3M_LW' class (in
'c2ray_cubep3m_LW.py') to code, to be used when LW+MHs option
is on.

- check source reading and flux normalizations

Current (untested) code assumes that the MH subgrid sources are in
the last (4 or 5, depending on case) column of source files.

We do need to add some type of source interpolation between the
full ('coarse') time steps (~11.5Myr) to the fine (PopIII lifetime)
timesteps (~2Myr) -- in principle that is easy and numbers should
not change too much, BUT:

Q: need to decide what to do when interpolation gives fractional, e.g.
if at one timeslice we start at 7 MHs in a cell, and end with, say 9 MHs
then the intermediate ones can only have 7, 8 or 9, no fractions.

Note: The suppression for MHs happens at every fine timestep, but the
suppression of LMACHs occurs only at the full timesteps.

- density fields reading is the same as currently

Q: do we still need to make the 'morphed' ones? - I think this is no
longer needed since MH sources are separately generated and read in?).

- need to add function to read the current jLW field

4) Write a sample 'driver' for the LW code, using cosmo_sim.ipynb or
similar as template. 

5) Modify installation scripts and instructions to account for possibility
of LW+MHs 

6) Modify Readthedocs documentation linked to GitHub
